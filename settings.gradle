/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user manual at https://docs.gradle.org/8.1.1/userguide/multi_project_builds.html
 * This project uses @Incubating APIs which are subject to change.
 */

pluginManagement {
    repositories {
        gradlePluginPortal()
        maven { url 'https://repo.spring.io/release' }
        maven { url "https://repo.spring.io/milestone" }
    }
}

plugins {
    id "com.gradle.enterprise" version "3.12.3"
    id "io.spring.ge.conventions" version "0.0.13"
}

dependencyResolutionManagement {
    repositories {
        mavenCentral()
    }
}



rootProject.name = 'OAuth2Demo'

def buildFiles = fileTree(rootDir) {
    def excludes = gradle.startParameter.projectProperties.get("excludeProjects")?.split(",")
    include "**/*.gradle", "**/*.gradle.kts"
    exclude "build", "**/gradle", "settings.gradle", "buildSrc", "/build.gradle", ".*", "out"
    if (excludes) {
        exclude excludes
    }
}

buildFiles.forEach { buildFile ->
    def isDefaultName = buildFile.name == "build.gradle" || buildFile.name == "build.gradle.kts"
    def isKotlin = buildFile.name.endsWith ".kts"
    if (isDefaultName) {
        def buildFilePath = buildFile.parentFile.absolutePath
        def projectPath = buildFilePath.replace((String) rootDir.absolutePath, "").replace(File.separator, ":")
        include projectPath
    } else {
        def projectName
        if (isKotlin) {
            projectName = buildFile.name.replace(".gradle.kts", "")
        } else {
            projectName = buildFile.name.replace(".gradle", "")
        }


        def projectPath = ":$projectName"
        include projectPath

        def project = findProject(projectPath)
        project.name = projectName
        project.projectDir = buildFile.parentFile
        project.buildFileName = buildFile.name
    }
}
